/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.threesister.views;

import com.threesister.DAO.AddFlightTicketDAO;
import com.threesister.dbmanager.DbManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author biswas
 */
public class ManageFlightTicket extends javax.swing.JFrame {

    /**
     * Creates new form ManageFlightTicket
     */
    public ManageFlightTicket() {
        initComponents();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.MINUTE);
        JSpinner t11 = new JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(t11, "hh:mm:ss");
        de.getTextField().setEditable(false);
        t11.setEditor(de);
        showFlightList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        flightName = new javax.swing.JTextField();
        travelAgencyName = new javax.swing.JTextField();
        issueDateChooser = new com.toedter.calendar.JDateChooser();
        flightDateChooser = new com.toedter.calendar.JDateChooser();
        airlinesName = new javax.swing.JTextField();
        ticketNumber = new javax.swing.JTextField();
        addFilghtInfo = new javax.swing.JButton();
        updateFlightInfo = new javax.swing.JButton();
        deleteFlightInfo = new javax.swing.JButton();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date,null,null,Calendar.MINUTE);
        t11 = new javax.swing.JSpinner(sm);
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightInfoTableList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id");

        jLabel2.setText("Name");

        jLabel3.setText("Travel Agency");

        jLabel4.setText("Date of Issue");

        jLabel5.setText("Flight Date");

        jLabel6.setText("Flight Time");

        jLabel7.setText("Airlines");

        jLabel8.setText("Ticket Number");

        id.setEditable(false);

        issueDateChooser.setDateFormatString("yyyy-MM-dd");
        issueDateChooser.setPreferredSize(new java.awt.Dimension(86, 28));

        flightDateChooser.setDateFormatString("yyyy-MM-dd");
        flightDateChooser.setPreferredSize(new java.awt.Dimension(86, 28));

        addFilghtInfo.setText("ADD");
        addFilghtInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFilghtInfoActionPerformed(evt);
            }
        });

        updateFlightInfo.setText("UPDATE");
        updateFlightInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFlightInfoActionPerformed(evt);
            }
        });

        deleteFlightInfo.setText("DELETE");
        deleteFlightInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteFlightInfoMouseClicked(evt);
            }
        });
        deleteFlightInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFlightInfoActionPerformed(evt);
            }
        });

        JSpinner.DateEditor de = new JSpinner.DateEditor(t11, "hh:mm a");
        de.getTextField().setEditable( false );
        t11.setEditor(de);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addFilghtInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(updateFlightInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteFlightInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id)
                            .addComponent(flightName)
                            .addComponent(travelAgencyName)
                            .addComponent(issueDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(flightDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(airlinesName)
                            .addComponent(ticketNumber)
                            .addComponent(t11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flightName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(travelAgencyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(issueDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flightDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(t11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(airlinesName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ticketNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFilghtInfo)
                    .addComponent(updateFlightInfo)
                    .addComponent(deleteFlightInfo))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        flightInfoTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sn", "Name", "Travel Agency", "Date of Issue", "Flight Date", "Flight Time", "Airlines", "TicketNumber", "Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        flightInfoTableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flightInfoTableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(flightInfoTableList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFilghtInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFilghtInfoActionPerformed
        String name = flightName.getText();
        String travelAgency = travelAgencyName.getText();
        String issueDate = ((JTextField) issueDateChooser.getDateEditor().getUiComponent()).getText();
        String flightDate = ((JTextField) flightDateChooser.getDateEditor().getUiComponent()).getText();

        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.MINUTE);
        JSpinner t11 = new JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(t11, "hh:mm:ss");
        de.getTextField().setEditable(false);
        t11.setEditor(de);
        String time = de.getFormat().format(t11.getValue());

        String airlines = airlinesName.getText();
        String ticketNumber = this.ticketNumber.getText();

        if (!"".equals(name) && !"".equals(travelAgency) && !"".equals(issueDate) && !"".equals(flightDate)
                && !"".equals(time) && !"".equals(airlines) && !"".equals(ticketNumber)) {
            boolean isAdded = AddFlightTicketDAO.addFlightTicket(name, travelAgency, issueDate, flightDate, time, airlines, ticketNumber);
            if (isAdded) {
                JOptionPane.showMessageDialog(null, "Flight info added successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Flight info couldnot be added ");
            }
        } else {
            JOptionPane.showMessageDialog(null, "please fill up the forms");
        }
    }//GEN-LAST:event_addFilghtInfoActionPerformed
    public ArrayList<FlightTicket> flightInfoList() {
        ArrayList<FlightTicket> flightTicketlList = new ArrayList<>();
        try {
            Connection con = null;
            ResultSet rs = null;
            PreparedStatement ps = null;

            String sql = "select * from FlightTicket where Deleted='N'";

            con = DbManager.getConnection();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            FlightTicket flightTicket = null;
            while (rs.next()) {
                flightTicket = new FlightTicket(rs.getInt("ID"),
                        rs.getString("Name"),
                        rs.getString("TravelAgency"),
                        rs.getString("IssueDate"),
                        rs.getString("FlightDate"),
                        rs.getString("FlightTime"),
                        rs.getString("Airlines"),
                        rs.getString("TicketNumber"));
                flightTicketlList.add(flightTicket);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return flightTicketlList;
    }

    public void showFlightList() {
        ArrayList<FlightTicket> list = flightInfoList();
        DefaultTableModel model = (DefaultTableModel) flightInfoTableList.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        flightInfoTableList.setDefaultRenderer(String.class, centerRenderer);
        int sn = 1;
        for (int i = 0; i < list.size(); i++) {
            Object[] row = new Object[9];
            row[0] = sn++;
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getTravelAgency();
            row[3] = list.get(i).getIssueDate();
            row[4] = list.get(i).getFlightDate();
            row[5] = list.get(i).getFlightTime();
            row[6] = list.get(i).getAirlines();
            row[7] = list.get(i).getTicketNumber();
            row[8] = list.get(i).getId();
            model.addRow(row);
        }
    }

    private void flightInfoTableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flightInfoTableListMouseClicked
        int i = flightInfoTableList.getSelectedRow();
        TableModel model = flightInfoTableList.getModel();
        flightName.setText(model.getValueAt(i, 1).toString());
        travelAgencyName.setText(model.getValueAt(i, 2).toString());
        try {
            java.util.Date issueDate = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(i, 3));
            issueDateChooser.setDate(issueDate);
            java.util.Date departureDate = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(i, 4));
            flightDateChooser.setDate(departureDate);
            String time = model.getValueAt(i, 5).toString();
            SimpleDateFormat format = new SimpleDateFormat("hh:mm:ss");
            t11.setValue(format.parseObject(time));
            airlinesName.setText(model.getValueAt(i, 6).toString());
            ticketNumber.setText(model.getValueAt(i, 7).toString());
            id.setText(model.getValueAt(i, 8).toString());
        } catch (ParseException ex) {
            Logger.getLogger(ManageBus.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_flightInfoTableListMouseClicked

    private void deleteFlightInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFlightInfoActionPerformed

    }//GEN-LAST:event_deleteFlightInfoActionPerformed

    private void updateFlightInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFlightInfoActionPerformed
        int row = flightInfoTableList.getSelectedRow();
        int id = (int) (flightInfoTableList.getModel().getValueAt(row, 8));
        String issueDate = ((JTextField) issueDateChooser.getDateEditor().getUiComponent()).getText();
        String departureDate = ((JTextField) flightDateChooser.getDateEditor().getUiComponent()).getText();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.MINUTE);
        JSpinner t11 = new JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(t11, "hh:mm:ss");
        de.getTextField().setEditable(false);
        t11.setEditor(de);
        String time = de.getFormat().format(t11.getValue());
        try {
            Connection con = null;
            ResultSet rs = null;
            PreparedStatement ps = null;
            String sql = "update FlightTicket set Name=?, TravelAgency=?, IssueDate=?, FlightDate=?, FlightTime=?, Airlines=?, TicketNumber=?  where id='" + id + "'";

            System.out.println(sql);
            con = DbManager.getConnection();
            ps = con.prepareStatement(sql);
            ps.setString(1, flightName.getText());
            ps.setString(2, travelAgencyName.getText());
            ps.setString(3, issueDate);
            ps.setString(4, departureDate);
            ps.setString(5, time);
            ps.setString(6, airlinesName.getText());
            ps.setString(7, ticketNumber.getText());
            ps.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) flightInfoTableList.getModel();
            model.setRowCount(0);
            showFlightList();
            JOptionPane.showMessageDialog(null, "Flight info updated Sucessfully");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateFlightInfoActionPerformed

    private void deleteFlightInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFlightInfoMouseClicked
        int row = flightInfoTableList.getSelectedRow();
        int id = (int) (flightInfoTableList.getModel().getValueAt(row, 8));
        try {
            Connection con = null;
            ResultSet rs = null;
            PreparedStatement ps = null;
            String sql = "update FlightTicket set Deleted='Y' where id='" + id + "'";

            con = DbManager.getConnection();
            ps = con.prepareStatement(sql);
            ps.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) flightInfoTableList.getModel();
            model.setRowCount(0);
            showFlightList();
            JOptionPane.showMessageDialog(null, "Flight Info Deleted Sucessfully");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteFlightInfoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFlightTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFlightTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFlightTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFlightTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFlightTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFilghtInfo;
    private javax.swing.JTextField airlinesName;
    private javax.swing.JButton deleteFlightInfo;
    private com.toedter.calendar.JDateChooser flightDateChooser;
    private javax.swing.JTable flightInfoTableList;
    private javax.swing.JTextField flightName;
    private javax.swing.JTextField id;
    private com.toedter.calendar.JDateChooser issueDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner t11;
    private javax.swing.JTextField ticketNumber;
    private javax.swing.JTextField travelAgencyName;
    private javax.swing.JButton updateFlightInfo;
    // End of variables declaration//GEN-END:variables
}
